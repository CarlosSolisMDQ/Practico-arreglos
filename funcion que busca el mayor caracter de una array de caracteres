#include <stdio.h>
#include <stdlib.h>
#include "pila.h"

void llenar_arreglo(int arr[], int size);
int suma(int arr[], int size);
void carga_pila(int arr[], int size, Pila *pila);
void carga_100_numeros_reales(int arr[], int size, int inicio);
int suma_reales(int arr[], int size);
void carga_caracteres(char c[], int size);
void mostrar_arreglo_letras(char arr[], int size);
void buscar_caracter(char arr[], int size, char item);
void insertar_caracter(char arr[], int size, char item);
char buscar_caracter_mayor(char arr[], int size);


int main()
{
    Pila pila;
    inicpila(&pila);
    int A[5] = {1,2,3,4,5};
    int size = 0;
    int inicio = 0;
    char item;
    char mayor = '*';

    printf("Ingrese el tama√±o del arreglo: ");
    scanf("\n%i", &size);

/*
    printf("\ningrese el numero inicial del arreglo: ");
    scanf("%d", &inicio);
*/
    //int B[size];
    char c[size];
    //llenar_arreglo(B, size);

    carga_caracteres(c, size);
    mostrar_arreglo_letras(c, size);
    mayor = buscar_caracter_mayor(c, size);

    printf("\n\nel caracter mayor es: %c\n", mayor);

/*
    printf("\ningrese la letra a insertar: ");
    fflush(stdin);
    scanf("%c", &item);
*/
    //insertar_caracter(c, size, item);

    //mostrar_arreglo_letras(c, size+1);

    //buscar_caracter(c, size, item);

    //int result = suma(B, size);


    //carga_pila(B, size, &pila);



    //carga_100_numeros(B, size, inicio);

    //int result = suma_reales(B, size);
/*
    for (int i = 0 ; i < size; i++){
        printf("\n   %d", B[i]);
    }

*/
    //printf("\n La sumatoria es: %i", result);

    //mostrar(&pila);

    return 0;
}


void llenar_arreglo(int arr[], int size){
    int valor;
    for(int j = 0; j < size; j++ ){
        printf("\ningrese un valor:");
        scanf("%i", &valor);
        arr[j] = valor;
    }

}

int suma(int arr[], int size){
    int suma = 0;
    for (int i = 0 ; i < size; i++) {
        suma += arr[i];
    }
    return suma;
}

void carga_pila(int arr[], int size, Pila *pila){

    for(int i = 0; i< size; i++){
        apilar(pila, arr[i]);
    }


}

void carga_100_numeros(int arr[], int size, int inicio){
    for (int i = 0 ; i < size; i++){
        arr[i] = inicio + i;
    }
}

int suma_reales(int arr[], int size){
    int temp = 0;
    for (int i = 0; i < size; i++){
        temp = temp + arr[i];
    }
    return temp;
}

void carga_caracteres(char c[], int size){
    for(int p = 0 ; p < size; p++){
        fflush(stdin);
        printf("ingrese una letra: ");
        scanf("%c", &c[p]);
    }

}

void mostrar_arreglo_letras(char arr[], int size){
    for (int i = 0; i < size; i++){
        printf("\n %c", arr[i]);
    }


}

void buscar_caracter(char arr[], int size, char item){
    int i = 0;
    int aux = 1;
    for (i = 0; i< size; i++){
        if (arr[i] == item) {
            printf("\nel elemento esta en el arreglo");
            aux = 0;
        }
    }
    if (aux != 0){
        printf("\nel elemento no esta en el arreglo");
    }
}

void insertar_caracter(char arr[], int size, char item){
    //esto fue un quilombo.

    int a, b;
    a = 0;
    b = 0;
    int size2 = size + 1;
    char aux[size2];
    //con el while busco el hueco como con pilas.

    while (arr[a] < item) {
        aux[a] = arr[a];
        a++;
        b++;
    }

    //con los for paso los items que quedan saltando 1 elemento y los retorno al array original.

    aux[a] = item;
    for (int i = a; i< size; i++){
        aux[i+1]= arr[i];
    }


    for(int j = 0; j <= size2; j++){
        arr[j] = aux[j];
    }


}

char buscar_caracter_mayor(char arr[], int size){

    char mayor;
    int i = size-1;
    char arr2[size];
    mayor = arr[0];

    for(int j = 0; j < size; j++){
        if (mayor > arr[j]){
            arr2[j] = arr[j];
        } else {
            arr2[j] = mayor;
            mayor = arr[j];
        }
    }
    return mayor;

}



